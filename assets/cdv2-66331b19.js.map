{"version":3,"file":"cdv2-66331b19.js","sources":["C:/Users/KgBear/desktop/OCHIN_ForFun/js_gamedev/src/CollisionDetection_2/main.ts"],"sourcesContent":["import { Circle, getDist, isCircleCollided } from \"../lib\";\r\n\r\nconst cv = document.querySelector(\"canvas\");\r\nif (cv === null) throw new Error(\"canvas is null\");\r\nconst ctx = cv.getContext(\"2d\");\r\nif (ctx === null) throw new Error(\"context is null\");\r\n\r\ncv.width = 1280;\r\ncv.height = 720;\r\n\r\nconst mouse = {\r\n  x: Math.round(cv.width / 2),\r\n  y: Math.round(cv.height / 2),\r\n};\r\n\r\ndocument.onmousemove = (evt) => {\r\n  const rect = cv.getBoundingClientRect();\r\n  mouse.x = Math.round(evt.clientX - rect.left);\r\n  mouse.y = Math.round(evt.clientY - rect.top);\r\n};\r\n\r\nconst getValidRandomX = (canvasWidth: number, radius: number) => {\r\n  const leftCanvasBoundary = Math.max(radius, Math.random() * canvasWidth);\r\n  const rightCanvasBoundary = canvasWidth - radius;\r\n\r\n  return Math.min(leftCanvasBoundary, rightCanvasBoundary);\r\n};\r\n\r\nconst getValidRandomY = (canvasHeight: number, radius: number) => {\r\n  const topCanvasBoundary = Math.max(radius, Math.random() * canvasHeight);\r\n  const bottomCanvasBoundary = canvasHeight - radius;\r\n\r\n  return Math.min(bottomCanvasBoundary, topCanvasBoundary);\r\n};\r\n\r\nconst isOverlapping = (\r\n  c: Circle[],\r\n  c2X: number,\r\n  c2Y: number,\r\n  c2Radius: number,\r\n) => {\r\n  if (c.length === 0) return false;\r\n\r\n  const overlapping = c.filter((c) => {\r\n    const dist = getDist(c.x, c.y, c2X, c2Y);\r\n    return isCircleCollided(dist, c.radius, c2Radius);\r\n  });\r\n\r\n  if (overlapping.length > 0) return true;\r\n\r\n  return false;\r\n};\r\n\r\nlet circles: Circle[];\r\nconst main = () => {\r\n  circles = [];\r\n  const numCircles = 150;\r\n  const radius = 25;\r\n  const color = \"hsl(240, 41%, 35%)\";\r\n\r\n  for (let i = 0; i < numCircles; i++) {\r\n    let x,\r\n      y: number = 0;\r\n    let c: Circle;\r\n    let willOverlap = true;\r\n\r\n    while (willOverlap) {\r\n      x = getValidRandomX(cv.width, radius);\r\n      y = getValidRandomY(cv.height, radius);\r\n\r\n      if (isOverlapping(circles, x, y, radius)) continue;\r\n\r\n      willOverlap = false;\r\n      c = new Circle(ctx, x, y, radius, color);\r\n      circles.push(c);\r\n    }\r\n  }\r\n};\r\n\r\nconst animate = () => {\r\n  requestAnimationFrame(animate);\r\n\r\n  ctx.clearRect(0, 0, cv.width, cv.height);\r\n  ctx.fillStyle = \"blue\";\r\n  ctx.font = \"16px arial\";\r\n  ctx.fillText(`x:${mouse.x} y:${mouse.y}`, mouse.x, mouse.y);\r\n\r\n  circles.forEach((c) => c.updateStroke());\r\n};\r\n\r\nmain();\r\nanimate();\r\n"],"names":["cv","ctx","mouse","evt","rect","getValidRandomX","canvasWidth","radius","leftCanvasBoundary","rightCanvasBoundary","getValidRandomY","canvasHeight","topCanvasBoundary","bottomCanvasBoundary","isOverlapping","c","c2X","c2Y","c2Radius","dist","getDist","isCircleCollided","circles","main","numCircles","color","i","x","y","willOverlap","Circle","animate"],"mappings":"qDAEA,MAAMA,EAAK,SAAS,cAAc,QAAQ,EAC1C,GAAIA,IAAO,KAAY,MAAA,IAAI,MAAM,gBAAgB,EACjD,MAAMC,EAAMD,EAAG,WAAW,IAAI,EAC9B,GAAIC,IAAQ,KAAY,MAAA,IAAI,MAAM,iBAAiB,EAEnDD,EAAG,MAAQ,KACXA,EAAG,OAAS,IAEZ,MAAME,EAAQ,CACZ,EAAG,KAAK,MAAMF,EAAG,MAAQ,CAAC,EAC1B,EAAG,KAAK,MAAMA,EAAG,OAAS,CAAC,CAC7B,EAEA,SAAS,YAAeG,GAAQ,CACxB,MAAAC,EAAOJ,EAAG,wBAChBE,EAAM,EAAI,KAAK,MAAMC,EAAI,QAAUC,EAAK,IAAI,EAC5CF,EAAM,EAAI,KAAK,MAAMC,EAAI,QAAUC,EAAK,GAAG,CAC7C,EAEA,MAAMC,EAAkB,CAACC,EAAqBC,IAAmB,CAC/D,MAAMC,EAAqB,KAAK,IAAID,EAAQ,KAAK,OAAA,EAAWD,CAAW,EACjEG,EAAsBH,EAAcC,EAEnC,OAAA,KAAK,IAAIC,EAAoBC,CAAmB,CACzD,EAEMC,EAAkB,CAACC,EAAsBJ,IAAmB,CAChE,MAAMK,EAAoB,KAAK,IAAIL,EAAQ,KAAK,OAAA,EAAWI,CAAY,EACjEE,EAAuBF,EAAeJ,EAErC,OAAA,KAAK,IAAIM,EAAsBD,CAAiB,CACzD,EAEME,EAAgB,CACpBC,EACAC,EACAC,EACAC,IAEIH,EAAE,SAAW,EAAU,GAEPA,EAAE,OAAQA,GAAM,CAClC,MAAMI,EAAOC,EAAQL,EAAE,EAAGA,EAAE,EAAGC,EAAKC,CAAG,EACvC,OAAOI,EAAiBF,EAAMJ,EAAE,OAAQG,CAAQ,CAAA,CACjD,EAEe,OAAS,EAK3B,IAAII,EACJ,MAAMC,EAAO,IAAM,CACjBD,EAAU,CAAA,EACV,MAAME,EAAa,IACbjB,EAAS,GACTkB,EAAQ,qBAEd,QAASC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACnC,IAAIC,EACFC,EAAY,EACV,EACAC,EAAc,GAElB,KAAOA,GACDF,EAAAtB,EAAgBL,EAAG,MAAOO,CAAM,EAChCqB,EAAAlB,EAAgBV,EAAG,OAAQO,CAAM,EAEjC,CAAAO,EAAcQ,EAASK,EAAGC,EAAGrB,CAAM,IAEzBsB,EAAA,GACd,EAAI,IAAIC,EAAO7B,EAAK0B,EAAGC,EAAGrB,EAAQkB,CAAK,EACvCH,EAAQ,KAAK,CAAC,EAElB,CACF,EAEMS,EAAU,IAAM,CACpB,sBAAsBA,CAAO,EAE7B9B,EAAI,UAAU,EAAG,EAAGD,EAAG,MAAOA,EAAG,MAAM,EACvCC,EAAI,UAAY,OAChBA,EAAI,KAAO,aACPA,EAAA,SAAS,KAAKC,EAAM,CAAC,MAAMA,EAAM,CAAC,GAAIA,EAAM,EAAGA,EAAM,CAAC,EAE1DoB,EAAQ,QAASP,GAAMA,EAAE,aAAc,CAAA,CACzC,EAEAQ,IACAQ,EAAQ"}